#!/bin/bash
# Common utils
# manually change the source
# https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/
# TODO: automate the change of source with mkrc

# Lantern is not on at first, so disable proxy
source ~/.profile
noproxy
sudo apt-get install mc htop tree -y

# LAMP Stack
# PHP5 is deleted from xenial 16.04
# configure PHP7 later.
sudo apt-get install -y apache2 mysql-server
sudo chown -R hustlion:hustlion /var/www
# chech the privileges with
# ls /var/www/ -l

# Meteor
# Meteor packages: https://atmospherejs.com/
# curl https://install.meteor.com/ | sh

# Bash-it
# https://github.com/Bash-it/bash-it
# Combined with my dotfiles.
# git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it


# Util
sudo apt-get install -y lynx launchy launchy-plugins launchy-skins ppa-purge

## ls /etc/apt/sources.list.d
## sudo ppa-purge ppa_name
## sudo apt-get purge package_name

## Zeal for documentation
## https://github.com/zealdocs/zeal/
if [ `which zeal` != "" ]; then
	echo "All ppas have been added."
else

	sudo add-apt-repository ppa:zeal-developers/ppa
    sudo add-apt-repository ppa:nathan-renniewaldock/flux
    sudo apt-get update
fi

sudo apt-get install -y zeal fluxgui chromium-browser

## F.lux for color adaption
## https://justgetflux.com/
# git clone https://github.com/xflux-gui/xflux-gui.git

## Chrome
## https://www.google.co.jp/chrome/browser/thankyou.html?platform=linux
## sudo dpkg -i google-chrome-stable_current_amd64.deb
# sudo apt-get install -y google-chrome-stable

## launchy theme HUD
## http://starkiteckt.deviantart.com/art/HUD-Launchy-Skin-516629091
if [ -d /usr/share/launchy/skins/hud_launchy_skin_by_starkiteckt-d8jl5k3 ]; then
    echo "Lanchy skins installed."
else
    sudo unzip ~/dotfiles-local/host-theme/hud_launchy_skin_by_starkiteckt-d8jl5k3.zip -d /usr/share/launchy/skins/
fi

# Oh-my-zsh
# https://github.com/robbyrussell/oh-my-zsh
if [ -d ~/.oh-my-zsh ]; then
	echo "Oh-my-zsh has been installed"
else
sudo apt install zsh
chsh -s $(which zsh)
sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
fi


if [ -d ~/fonts ]; then
	echo "Fonts has been installed."
else
	cd ~
	git clone https://github.com/powerline/fonts.git
	cd fonts
	./install.sh
fi
## the above seems doesn't install all fonts properly
## added to ~/.local/share/fonts
## add this
## pip source
## TODO: automate https://mirrors.tuna.tsinghua.edu.cn/help/pypi/
sudo apt-get install python-pip python-dev build-essential && sudo pip install --upgrade pip && sudo pip install --upgrade virtualenv 
pip install --user powerline-status
## So it's the symbol that is not properly installed
## https://powerline.readthedocs.io/en/latest/installation/linux.html#font-installation

cd ~
wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf
wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf
mkdir ~/.fonts
mv PowerlineSymbols.otf ~/.fonts/
fc-cache -vf ~/.fonts/
mkdir ~/.config/fontconfig/conf.d
mv 10-powerline-symbols.conf ~/.config/fontconfig/conf.d/
mkdir ~/.fontconfig
mv 10-powerline-symbols.conf ~/.fontconfig/
## to check the font path
## `xset q`
## maybe there are duplicates as configured above
## but anyway you should go to the terminal preference and choose a powerline font
## Then those symbols will work
## I choose Ubuntu Mono derivative Powerline Regular, 12pt

# Solarized
# http://ethanschoonover.com/solarized
# https://github.com/altercation/solarized
if [ -d ~/solarized ]; then
    echo "Solarized color has been configured."
else
cd ~
git clone https://github.com/altercation/solarized.git
git clone https://github.com/Anthony25/gnome-terminal-colors-solarized.git
cd gnome-terminal-colors-solarized
## Be sure to choose `1` and `YES`
./set_dark.sh
fi
## Dircolor
if [ -d ~/dircolors-solarized ]; then
	echo "dircolors-solarized has been installed."
else
cd ~
git clone git://github.com/seebi/dircolors-solarized.git
cp ~/dircolors-solarized/dircolors.256dark ~/.dircolors
eval `dircolors ~/.dircolors`
fi

# RCM
# rc file (dotfile) management
# https://github.com/thoughtbot/rcm
# sudo add-apt-repository ppa:martin-frost/thoughtbot-rcm
# sudo apt-get update
# sudo apt-get install rcm

# Thoughtbot dotfiles
# https://github.com/thoughtbot/dotfiles
# later you can totally customize
#cd ~
#git clone git://github.com/thoughtbot/dotfiles.git
#sudo apt-get install vim
#env RCRC=$HOME/dotfiles/rcrc rcup
#source ~/.profile
# Vim plugins
# http://vimawesome.com/
# https://github.com/VundleVim/Vundle.vim
# https://github.com/Shougo/neobundle.vim 
## Build vim for youcompleteme
## https://github.com/Valloric/YouCompleteMe/wiki/Building-Vim-from-source
## Uninstall: dpkg -r vim

if [ -d ~/vim ]; then
	echo "customized vim has been installed"
else

sudo apt-get install libncurses5-dev libgnome2-dev libgnomeui-dev \
        libgtk2.0-dev libatk1.0-dev libbonoboui2-dev \
            libcairo2-dev libx11-dev libxpm-dev libxt-dev python-dev \
                ruby-dev git
if [ `which vim` != "" ]; then
sudo apt-get remove vim vim-runtime gvim vim-tiny vim-common vim-gui-common
else
	echo "Vim is not installed, continue."
fi

cd ~
git clone https://github.com/vim/vim.git
cd vim
./configure --with-features=huge \
            --enable-multibyte \
            --enable-rubyinterp \
            --enable-pythoninterp \
            --with-python-config-dir=/usr/lib/python2.7/config \
            --enable-perlinterp \
            --enable-luainterp \
            --enable-gui=gtk2 --enable-cscope --prefix=/usr
make VIMRUNTIMEDIR=/usr/share/vim/vim74
sudo apt-get install checkinstall
sudo checkinstall
sudo update-alternatives --install /usr/bin/editor editor /usr/bin/vim 1
sudo update-alternatives --set editor /usr/bin/vim
sudo update-alternatives --install /usr/bin/vi vi /usr/bin/vim 1
sudo update-alternatives --set vi /usr/bin/vim
fi
## compile YCM
### which npm from Node
curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
sudo apt-get install -y nodejs
sudo npm install npm -g
### cnpm which could be a faster choice in China
### https://github.com/cnpm/cnpm
sudo npm install cnpm -g --registry=https://registry.npm.taobao.org


### which rustc from Rust
curl -sSf https://static.rust-lang.org/rustup.sh | sh
### which mono
sudo add-apt-repository ppa:ermshiperete/monodevelop
sudo apt-get update
sudo apt-get install -y monodevelop-current mono-xbuild mono-complete
### which go
cd ~
wget https://storage.googleapis.com/golang/go1.6.2.linux-amd64.tar.gz
sudo tar -C /usr/local -xzf go1.6.2.linux-amd64.tar.gz

### which tsc from typescript
sudo npm install -g typescript
### which cmake
sudo apt-get install build-essential cmake python-dev python3-dev -y
cd ~/.vim/bundle/youcompleteme
# ./install.py --all
# --all is simple but --omnisharp-completer fails
./install.py --gocode-completer --tern-completer --racer-completer 

# OmniSharp-vim
cd ~/.vim/bundle/omnisharp-vim
git submodule update --init --recursive
cd server
# xbuild    not working due to CS0518 error

################################
# Tmux
################################
# https://github.com/tmux/tmux
sudo apt-get install tmux

## tpm
## https://github.com/tmux-plugins/tpm
## Currently broken, waiting to be resolved, may be due to the configs present
## Need to figure them out
cd ~
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

## tmuxinator
### Ruby source
gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/


sudo gem install tmuxinator

# OmniSharp
# Cross platform .NET dev
# http://www.omnisharp.net/
## Yeoman
## http://yeoman.io/
sudo npm install -g yo
## Generator
## https://www.npmjs.com/package/generator-aspnet
## Usage: yo aspnet, dnu restore, dnu build
sudo npm install -g generator-aspnet

## Install ASP.NET core
## https://docs.asp.net/en/latest/getting-started/installing-on-linux.html
### DNVM
sudo apt-get install unzip curl
curl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/dnvminstall.sh | DNX_BRANCH=dev sh && source ~/.dnx/dnvm/dnvm.sh
### DNU
sudo apt-get install libunwind8 gettext libssl-dev libcurl4-openssl-dev zlib1g libicu-dev uuid-dev -y
dnvm upgrade -r coreclr
dnvm upgrade -r mono
### libuv
### https://github.com/libuv/libuv
sudo apt-get install make automake libtool curl
curl -sSL https://github.com/libuv/libuv/archive/v1.8.0.tar.gz | sudo tar zxfv - -C /usr/local/src
cd /usr/local/src/libuv-1.8.0
sudo sh autogen.sh
sudo ./configure
sudo make
sudo make install
sudo rm -rf /usr/local/src/libuv-1.8.0 && cd ~/
sudo ldconfig


################################
# Blogging with Octopress (jekyll)
# http://octopress.org/
# If you want to build plugins, refer to this: 
# http://octopress.org/2015/01/15/octopress-3.0-is-coming/
# Before 3.0: https://github.com/imathis/octopress
# 3.0: https://github.com/octopress/octopress
################################
sudo gem install jekyll
sudo gem install octopress



################################
# HaXe

################################

# this installs both haxe and neko
sudo add-apt-repository ppa:haxe/releases -y
sudo apt-get update
sudo apt-get install haxe -y
mkdir ~/haxelib && haxelib setup ~/haxelib
# this installs both openfl and lime
haxelib install openfl
haxelib run openfl setup


# system util
## Shutter
sudo add-apt-repository ppa:shutter/ppa
sudo apt-get update
sudo apt-get install shutter


## Lantern
cd ~
# git clone https://github.com/getlantern/lantern.git
wget https://raw.githubusercontent.com/getlantern/lantern-binaries/master/lantern-installer-beta-64-bit.deb
sudo dpkg -i lantern-installer-beta-64-bit.deb
# 1. Lantern proxy
# http://127.0.0.1:8787

# 2. Lantern PAC (Proxy Auto-Configuration)
# http://127.0.0.1:16823/proxy_on.pac

# curl --proxy 127.0.0.1:8787 www.google.com


## Genymotion
## https://www.genymotion.com/download/
## sudo ./genymotion-2.6.0-ubuntu15_x64.bin
## /opt/genymobile/genymotion
## Need virtual box
## https://www.virtualbox.org/wiki/Downloads
su
echo 'deb http://download.virtualbox.org/virtualbox/debian xenial contrib' >> /etc/apt/sources.list
su hustlion
wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
sudo apt-get update
sudo apt-get install dkms virtualbox-5.0

## Dropbox
cd ~
wget https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2015.10.28_amd64.deb
sudo dpkg -i dropbox_2015.10.28_amd64.deb
nautilus --quit
dropbox start -i 

## didn't configure YCM properly
## so use sublime text 3 for now
cd ~
wget https://download.sublimetext.com/sublime-text_build-3103_amd64.deb
sudo dpkg -i sublime-text_build-3103_amd64.deb

################################
# Configure common folders

################################
cd ~
# experiment folder
# exp/lib contains libraries to experiment with
mkdir exp
mkdir exp/lib
# documentation folder
mkdir docs
## download docs that's valuable for me
cd docs
git clone --depth=1 https://github.com/mrdoob/three.js.git
git clone --depth=1 https://github.com/mrdoob/texgen.js.git
git clone --depth=1 https://github.com/mrdoob/glsl-sandbox.git
git clone --depth=1 https://github.com/openfl/openfl
git clone --depth=1 https://github.com/mrdoob/Hi-ReS-Stats.git

# the folder that contains source code that's worth reading
# read source, rs for short
cd ~
mkdir rs


########## Need to modify
# Keyboard
sudo passwd
su
# http://askubuntu.com/questions/149971/how-do-you-remap-a-key-to-the-caps-lock-key-in-xubuntu
sudo echo 'XKBOPTIONS="ctrl:nocaps"' >> /etc/default/keyboard
su hustlion
# press ok for all
sudo dpkg-reconfigure keyboard-configuration

